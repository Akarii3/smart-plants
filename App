import kivy
from kivy.app import App
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.image import Image
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.popup import Popup
from kivy.uix.widget import Widget
from kivy.core.window import Window
from plyer import filechooser
import tensorflow as tf
import numpy as np
from tensorflow.keras.preprocessing import image

kivy.require('2.1.0')  # Ensure the right Kivy version

# Load the TensorFlow Lite model (assuming it's in the current directory)
interpreter = tf.lite.Interpreter(model_path="plant_classification_cnn.tflite")
interpreter.allocate_tensors()

# Get input and output tensor details
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# Plant details dictionary
plant_details = {
 "Alstonia Scholaris diseased": {
        "description": "Scientific name: Alstonia scholaris, Family: Apocynaceae. This tree is known for its tall, evergreen nature, but when diseased, it shows yellowing of leaves and wilting due to fungal infections.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained soil, but does not tolerate waterlogged conditions."
    },
    "Alstonia Scholaris healthy": {
        "description": "Scientific name: Alstonia scholaris, Family: Apocynaceae. Commonly known as the 'Devil Tree,' this tree is revered for its medicinal properties, with glossy, dark green leaves.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers moist, well-drained soil but tolerates dry periods."
    },
    "Arjun diseased": {
        "description": "Scientific name: Terminalia arjuna, Family: Combretaceae. The tree's bark is used in medicine, but when diseased, it can show browning of leaves and irregular growth due to pest infestation.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers moist, well-drained soil, and can tolerate seasonal droughts."
    },
    "Arjun healthy": {
        "description": "Scientific name: Terminalia arjuna, Family: Combretaceae. Known for its heart-shaped leaves and white flowers, this tree is used for heart health in traditional medicine.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers moist, well-drained soil."
    },
    "Bael diseased": {
        "description": "Scientific name: Aegle marmelos, Family: Rutaceae. Bael trees affected by fungal or bacterial infections can have spotted leaves and decreased fruit production.",
        "soil_moisture_range": "Low to moderate moisture (20% - 50%). Prefers well-drained soil and can tolerate dry conditions."
    },
    "Basil healthy": {
        "description": "Scientific name: Ocimum basilicum, Family: Lamiaceae. A fragrant herb commonly used in cooking, it has broad, aromatic leaves and is also known for its medicinal uses, especially in Ayurveda.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers slightly moist, well-drained soil."
    },
    "Chinar diseased": {
        "description": "Scientific name: Platanus orientalis, Family: Platanaceae. Diseased Chinar trees might show signs of leaf spots, peeling bark, and stunted growth caused by environmental stress or fungal infections.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers moist, well-drained soil."
    },
    "Chinar healthy": {
        "description": "Scientific name: Platanus orientalis, Family: Platanaceae. Known for its broad, large leaves and distinctive bark, this tree is a symbol of resilience and is found mostly in temperate climates.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers moist, well-drained soil."
    },
    "Gauva diseased": {
        "description": "Scientific name: Psidium guajava, Family: Myrtaceae. Diseased guava trees may exhibit yellowing of leaves, fruit rot, or early leaf drop due to fungal infections or pests.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained soil but should not be overwatered."
    },
    "Gauva healthy": {
        "description": "Scientific name: Psidium guajava, Family: Myrtaceae. Known for its sweet, tangy fruit, the guava tree has smooth green leaves and is prized for its high Vitamin C content.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained, slightly acidic soil."
    },
    "Jamun diseased": {
        "description": "Scientific name: Syzygium cumini, Family: Myrtaceae. The Jamun tree can suffer from leaf curl, fruit drop, and rot if affected by fungal infections or environmental stress.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained, slightly acidic soil."
    },
    "Jamun healthy": {
        "description": "Scientific name: Syzygium cumini, Family: Myrtaceae. This evergreen tree is known for its dark purple fruits with a sweet-sour taste, often used to treat diabetes in traditional medicine.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained soil with a slightly acidic pH."
    },
    "Jatropha diseased": {
        "description": "Scientific name: Jatropha curcas, Family: Euphorbiaceae. Diseased Jatropha plants show leaf spotting and wilting due to fungal diseases or insect infestations.",
        "soil_moisture_range": "Low to moderate moisture (20% - 50%). Prefers well-drained soil and can tolerate dry conditions."
    },
    "Jatropha healthy": {
        "description": "Scientific name: Jatropha curcas, Family: Euphorbiaceae. Known for its drought tolerance, Jatropha is used as a biofuel plant and has small, bright green leaves and yellow flowers.",
        "soil_moisture_range": "Low moisture (10% - 40%). Prefers dry, well-drained soils."
    },
    "Lemon diseased": {
        "description": "Scientific name: Citrus limon, Family: Rutaceae. Diseased lemon trees may suffer from yellowing leaves, spots, or root rot due to fungal infections or poor soil drainage.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained, slightly acidic soil."
    },
    "Lemon healthy": {
        "description": "Scientific name: Citrus limon, Family: Rutaceae. Known for its sour, tangy fruit, lemon trees have bright green leaves and fragrant white flowers, and are commonly used in culinary and medicinal applications.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained soil with good drainage to avoid waterlogging."
    },
    "Mango diseased": {
        "description": "Scientific name: Mangifera indica, Family: Anacardiaceae. Mango trees can show symptoms like leaf spots, premature fruit drop, or blackened branches when affected by fungal or bacterial diseases.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained soil but does not like standing water."
    },
    "Mango healthy": {
        "description": "Scientific name: Mangifera indica, Family: Anacardiaceae. A tropical tree known for its sweet, delicious fruits, mango trees have large, glossy leaves and can grow quite tall in tropical climates.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers slightly acidic, well-drained soil."
    },
    "Pomegranate diseased": {
        "description": "Scientific name: Punica granatum, Family: Lythraceae. Pomegranate trees affected by disease show signs like wilted leaves, fruit rot, or fungal growth on branches.",
        "soil_moisture_range": "Low moisture (20% - 40%). Prefers dry, well-drained soil."
    },
    "Pomegranate healthy": {
        "description": "Scientific name: Punica granatum, Family: Lythraceae. Known for its bright red fruits with jewel-like seeds, the pomegranate tree has glossy, leathery leaves and beautiful red flowers.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained soil but can tolerate dry conditions."
    },
    "Pongamia Pinnata diseased": {
        "description": "Scientific name: Pongamia pinnata, Family: Fabaceae. Diseased Pongamia trees can show leaf discoloration and poor flowering due to insect infestations or root diseases.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained, slightly alkaline soil."
    },
    "Pongamia Pinnata healthy": {
        "description": "Scientific name: Pongamia pinnata, Family: Fabaceae. Known for its oil-rich seeds, Pongamia Pinnata is a medium-sized tree used for reforestation, with compound leaves and fragrant white flowers.",
        "soil_moisture_range": "Moderate moisture (40% - 60%). Prefers well-drained soil and can tolerate dry conditions."
    },
    # Add more plants here...
}

class Smart_PlantsApp(App):
    def build(self):
        # Set up the layout
        layout = BoxLayout(orientation='vertical')
        
        # Add button to choose image
        self.select_button = Button(text="Select Image")
        self.select_button.bind(on_release=self.open_filechooser)
        
        # Add label to show prediction
        self.result_label = Label(text="Prediction: None", size_hint=(1, 0.1))
        
        # Add label to show plant details
        self.details_label = Label(text="Plant details will be shown here.", size_hint=(1, 0.2))
        
        # Add the image widget to display the selected image
        self.image_widget = Image(size_hint=(1, 0.6), allow_stretch=True)

        layout.add_widget(self.select_button)
        layout.add_widget(self.result_label)
        layout.add_widget(self.details_label)
        layout.add_widget(self.image_widget)
        
        return layout

    def open_filechooser(self, instance):
        # Open file chooser to select an image
        filechooser.open_file(on_selection=self.on_file_selected)

    def on_file_selected(self, selection):
        if selection:
            # Get the selected file path
            image_path = selection[0]
            print(f"Selected image: {image_path}")

            # Load and display the selected image
            self.image_widget.source = image_path

            # Classify the image
            self.classify_image(image_path)

    def classify_image(self, image_path):
        # Load the image using Keras image loader
        img = image.load_img(image_path, target_size=(224, 224))
        img_array = image.img_to_array(img) / 255.0  # Normalize the image
        img_array = np.expand_dims(img_array, axis=0)  # Add batch dimension
        
        # Set the input tensor
        input_index = input_details[0]['index']
        interpreter.set_tensor(input_index, img_array.astype(np.float32))

        # Run inference
        interpreter.invoke()

        # Get the output tensor
        output_index = output_details[0]['index']
        output_data = interpreter.get_tensor(output_index)

        # Get the predicted class label
        predicted_class = np.argmax(output_data, axis=1)

        # Map the predicted class to the actual class names (update with your actual class names)
        class_names = ['Alstonia Scholaris diseased', 'Alstonia Scholaris healthy', 'Arjun diseased', 
			   'Arjun healthy', 'Bael diseased', 'Basil healthy', 'Chinar diseased', 
			   'Chinar healthy', 'Gauva diseased', 'Gauva healthy', 'Jamun diseased', 
			   'Jamun healthy', 'Jatropha diseased', 'Jatropha healthy', 
			   'Lemon diseased', 'Lemon healthy', 'Mango diseased', 'Mango healthy', 'Pomegranate diseased', 
			   'Pomegranate healthy', 'Pongamia Pinnata diseased', 
			   'Pongamia Pinnata healthy']
        
        predicted_label = class_names[predicted_class[0]]
        print(f"Predicted class: {predicted_label}")
        
        # Display the prediction on the screen
        self.result_label.text = f"Prediction: {predicted_label}"

        # Display the plant details
        self.show_plant_details(predicted_label)

    def show_plant_details(self, plant_name):
        # Get the details for the predicted plant
        if plant_name in plant_details:
            plant_info = plant_details[plant_name]
            description = plant_info["description"]
            soil_moisture = plant_info["soil_moisture_range"]
            self.details_label.text = f"Description: {description}\nSoil Moisture Range: {soil_moisture}"
        else:
            self.details_label.text = "No details available for this plant."

if __name__ == '__main__':
    Smart_PlantsApp().run()
