import kivy
from kivy.app import App
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.image import Image
from kivy.uix.boxlayout import BoxLayout
from kivy.core.window import Window
from plyer import filechooser
import tensorflow as tf
import numpy as np
from tensorflow.keras.preprocessing import image

kivy.require('2.1.0')

# Set theme colors
Window.clearcolor = (0.9, 1, 0.9, 1)  # Light green background

# Font sizes
title_font = "22sp"
label_font = "18sp"
button_font = "18sp"

class SmartDeviceApp(App):
    def build(self):
        layout = BoxLayout(orientation='vertical', padding=20, spacing=15)

        # Image display
        self.image_widget = Image(size_hint=(1, 0.7), allow_stretch=True)
        
        # Select button
        self.select_button = Button(
            text="[b]Select Image[/b]", markup=True,
            font_size=button_font, background_color=(0.2, 0.6, 0.2, 1),
            color=(1, 1, 1, 1), size_hint=(1, 0.1)
        )
        self.select_button.bind(on_release=self.open_filechooser)
        
        # Result label
        self.result_label = Label(
            text="[b]Prediction:[/b] None", markup=True,
            font_size=title_font, color=(0, 0.5, 0, 1), size_hint=(1, 0.1)
        )
        
        # Plant details label
        self.details_label = Label(
            text="[b]Plant details will be shown here.[/b]", markup=True,
            font_size=label_font, color=(0, 0.4, 0, 1), size_hint=(1, 0.3)
        )
        
        layout.add_widget(self.image_widget)
        layout.add_widget(self.select_button)
        layout.add_widget(self.result_label)
        layout.add_widget(self.details_label)
        
        return layout

    def open_filechooser(self, instance):
        filechooser.open_file(on_selection=self.on_file_selected)

    def on_file_selected(self, selection):
        if selection:
            image_path = selection[0]
            self.image_widget.source = image_path
            self.classify_image(image_path)

    def classify_image(self, image_path):
        # Load image
        img = image.load_img(image_path, target_size=(224, 224))
        img_array = image.img_to_array(img) / 255.0
        img_array = np.expand_dims(img_array, axis=0)
        
        # Load TensorFlow Lite model
        interpreter = tf.lite.Interpreter(model_path="plant_classification_cnn.tflite")
        interpreter.allocate_tensors()
        input_details = interpreter.get_input_details()
        output_details = interpreter.get_output_details()
        
        interpreter.set_tensor(input_details[0]['index'], img_array.astype(np.float32))
        interpreter.invoke()
        output_data = interpreter.get_tensor(output_details[0]['index'])
        predicted_class = np.argmax(output_data, axis=1)
        
        class_names = ['Healthy Aglaonema', 'Healthy Aloe Vera', 'Healthy Arrowhead', 
                       'Healthy Arrowroot', 'Healthy Golden Pothos', 'Healthy Snake Plant', 
                       'Healthy Swiss Cheese Plant', 'Unhealthy Aglaonema', 'Unhealthy Aloe Vera', 
                       'Unhealthy Arrowhead', 'Unhealthy Arrowroot', 'Unhealthy Golden Pothos', 
                       'Unhealthy Snake Plant', 'Unhealthy Swiss Cheese Plant']
        
        predicted_label = class_names[predicted_class[0]]
        self.result_label.text = f"[b]Prediction:[/b] {predicted_label}"
        self.show_plant_details(predicted_label)

    def show_plant_details(self, plant_name):
        plant_details = {
    "Healthy Aglaonema": {
        "description": "Attractive variegated leaves with silver or white streaks. Thrives in low to medium light.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Well-drained, slightly acidic soil with peat & perlite"
    },
    "Healthy Aloe Vera": {
        "description": "Succulent with thick, spiky leaves, known for medicinal properties. Prefers full sun.",
        "soil_moisture_range": "Low (10%-30%)",
        "soil_type": "Well-drained, sandy or cactus mix"
    },
    "Healthy Arrowhead": {
        "description": "Ornamental plant with arrow-shaped leaves, thrives in moderate light.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Well-drained, organic soil with peat & perlite"
    },
    "Healthy Arrowroot": {
        "description": "Oval leaves with dark green and red veins, grows well in moderate light.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Loamy, well-drained soil rich in organic matter"
    },
    "Healthy Golden Pothos": {
        "description": "Heart-shaped glossy leaves with green and yellow variegation, tolerates low light.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Well-drained, nutrient-rich potting soil"
    },
    "Healthy Snake Plant": {
        "description": "Upright, sword-shaped leaves with green stripes, highly tolerant of neglect.",
        "soil_moisture_range": "Low (10%-30%)",
        "soil_type": "Well-drained, sandy soil or cactus mix"
    },
    "Healthy Swiss Cheese Plant": {
        "description": "Large, glossy leaves with fenestrations, thrives with support.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Well-draining, peat-based potting mix"
    },
    "Unhealthy Aglaonema": {
        "description": "Yellowing/browning leaves, wilting due to poor watering.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Well-drained, slightly acidic soil with peat & perlite"
    },
    "Unhealthy Aloe Vera": {
        "description": "Wrinkled, discolored, or drooping leaves due to under/overwatering.",
        "soil_moisture_range": "Low (10%-30%)",
        "soil_type": "Well-drained, sandy or cactus mix"
    },
    "Unhealthy Arrowhead": {
        "description": "Yellowing/brown leaf tips or wilting due to inconsistent watering.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Well-drained, organic soil with peat & perlite"
    },
    "Unhealthy Arrowroot": {
        "description": "Yellowing leaves or brown spots from watering issues.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Loamy, well-drained soil rich in organic matter"
    },
    "Unhealthy Golden Pothos": {
        "description": "Yellowing leaves, root rot, or leggy growth from poor conditions.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Well-drained, nutrient-rich potting soil"
    },
    "Unhealthy Snake Plant": {
        "description": "Yellowing, soft leaves from overwatering or insufficient light.",
        "soil_moisture_range": "Low (10%-30%)",
        "soil_type": "Well-drained, sandy soil or cactus mix"
    },
    "Unhealthy Swiss Cheese Plant": {
        "description": "Yellowing, browning, or stunted growth from improper care.",
        "soil_moisture_range": "Moderate (40%-60%)",
        "soil_type": "Well-draining, peat-based potting mix"
    }
}

        
        details = plant_details.get(plant_name, None)
        if details:
            self.details_label.text = (
                f"[b]Description:[/b] {details['description']}\n"
                f"[b]Soil Moisture Range:[/b] {details['soil_moisture_range']}\n"
                f"[b]Soil Type:[/b] {details['soil_type']}"
            )
        else:
            self.details_label.text = "[b]No details available for this plant.[/b]"

if __name__ == '__main__':
    SmartDeviceApp().run()

